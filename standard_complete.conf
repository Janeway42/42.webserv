# This is a complete default configuration file.
# It serves files starting from the web root you created (on the `root_directory` key).
# It will only respond to requests to the `server_name` provided.
# Relative path ./ always starts from $root_directory.
# Directories starting with _ are internal (don't add them here).
# The default server for a specific port is the first server block listed in this file.

# ----------------------------------------------------------------------------------------------------------------------
# ==================================================  default server  ==================================================
server {
    # server_name = name of a domain that can substitute the ip address on the browser search bar
    ### not mandatory | default: localhost -> If a new one is added, it also needs to be added in /etc/hosts
    # syntax: server_name <domain_string> -> doesn't contain regexp (regular expressions) or wildcards
    server_name                 test2;
    # host = The ip address (the Internet Protocol address). It identifies a machine in a network and is used to
    # determine the destination of a data packet
    ### not mandatory | default 0.0.0.0 (it's an address used to refer to all IP addresses on the same machine)
    # syntax: host <X.X.X.X> -> doesn't contain regexp (regular expressions) or wildcards
	host						0.0.0.0;
    # listens_to = listening port number for this port (it identifies a particular application or service on a system)
    ### not mandatory | default 8080
    # syntax: listens_to <u_short> -> u_short between 49152 and 65536 (exceptions: 8008 and 8080).
    listens_to                  8080;
    # root_directory = root folder of site directory. It cannot be the same directory as the
    # web server (i.e. it cannot be only ./ or . or any path that leads to the webserver directory)
    ### not mandatory | default: ./standard_server (for the sake of this project's organization)
    # syntax: root_directory <dir> -> doesn't contain regexp (regular expressions), wildcards or full path
    root_directory              resources;
    # index_file = specifies the default file to serve when a location/directory is requested. It will look
    # for this file name on the $root_directory of the server or the specific location/directory and its subdirectories
    # ex1: http://localhost -> it will look for index.html at this server's $root_directory
    # ex2: http://localhost/dir1/dir2 -> it will look for index.html at the $root_directory of this specific uri location
    # not mandatory | default: index.html
    # syntax: index_file <file_name_string> -> doesn't contain regexp (regular expressions), wildcards or full/relative path
    index_file                  ;
	# client_max_body_size = max size (in bytes) for the request's body
	### not mandatory | default: 1024 (1KB) -> Max: INT_MAX (i.e. 2GB)
	# syntax: client_max_body_size <unsig_int_nbr>
    # 200 kb
	# client_max_body_size        204800;
    # 20 MB
	client_max_body_size        20971520;
	# error_page = specifies http status error file(s) to be displayed. Separated by spaces if more than one is added
	# The status code to be sent on the response will be specified as the name of the file (or part of it)
	# To avoid having to add another location for the error page(s), the web server will search for them inside the
	# directory $server.$root_directory/error_pages
	### not mandatory | default: webserver will decide
	# syntax: error_page <file(s)_string> -> doesn't contain regexp (regular expressions), wildcards or full/relative path
	error_page                 404.html 405.html 500.html 504.html;
    # upload_directory = folder to save uploaded file(s)
    ### not mandatory | default: ./uploads (for the sake of this project's organization)
    # syntax: upload_directory <dir> -> doesn't contain regexp (regular expressions), wildcards or full path
    upload_directory            UPLOADS;

    # location = specifies a set of configuration for a specific path directory (this path is located on the URL
    # after http://host::port/) and has to match exatcly the uri directory path
    # E.g.: http://host::port/test/test1 has to be added as "location /test/test1". And the web server will search for
    # data inside the $location.$root_directory/test/test1 path
    # I.e.: Be sure that every file and folder found under a domain is a match for one or more location directives.
    ### not mandatory | When an url is requested (E.g.: http://localhost/users/form/form.html):
    #                     - The uri path has to be added to this file, after this location keyword
    #                       E.g.: location /users/form
    #                       This location $root_directory/users/form and $index_file will be used
    #                   When an url is requested (E.g.: http://localhost/tests) but no location is given:
    #                     - The response will contain a 404 status code since the location (i.e.: the path)
    #                       does no exist or can not be accessed/served
    #                   When no url directory is requested (E.g.: http://localhost):
    #                     - If a "location /" is not found, the server's default $root_directory and $index_file will be used
    # Obs.: the location block is not mandatory but if a location block is inserted, then a </uri_path> is mandatory
    # syntax: location </uri_path> -> doesn't contain regexp (regular expressions) or wildcards. It just matches the uri
    location /subfolder {
        # root_directory = specifies the root directory of this location
        # I.e.: It specifies the directory where the web server will look for the requested files
        ### mandatory | default: $server.$root_directory.$uri_path (if no <dir_name_string> is input)
        # syntax: root_directory <dir_name_string> -> doesn't contain regexp (regular expressions), wildcards or full path
        root_directory          ./resources/location_random_dir/;
        # allow_methods = allowed methods for this location/directory
        ### not mandatory | default: NONE (available: GET POST DELETE)
        # syntax: allow_methods <METHOD1 METHOD2> -> methods upercase and separated by spaces
        #allow_methods           GET;
        # index_file = specifies the default file to serve when a location/directory is requested
        ### not mandatory | default: index.html
        # syntax: index_file <file_name_string> -> doesn't contain regexp (regular expressions), wildcards or full/relative path
        index_file              index_test.html;
        # auto_index = turns on/off directory listing for this location
        # Obs.: If the auto_index is on but the index file is found, it will serve it instead
        ### not mandatory | default: off
        # syntax: auto_index <on/off>
        auto_index              on;
        # redirection = redirects this location to another uri (by sending a 301 response with the new url on the header)
        # Obs.: this new uri has to exist as a location in order to be served
        ### not mandatory | default: no redirection
        # syntax: redirection <new_complete_url>
        redirection             http://localhost:8080/images/;
        # set_cookies = cookies key=value pair
        ### not mandatory | default: no cookies
        # syntax: set_cookies <key=value>
        set_cookies				cookie=true;
    }

    # location (CGI) = specifies a set of configuration for the CGI. It'll serve any file with the extension set here.
    ### not mandatory
    # Obs.: the location cgi block is not mandatory but if it is inserted, then a <.extension> is mandatory
    # syntax: location <.extension> -> doesn't contain regexp (regular expressions), wildcards or full/relative path
    location .py {
        # root_directory = specifies the root directory of the script(s)
        ### mandatory | default: $server.$root_directory (if no <dir_name_string> is input)
        # syntax: root_directory <dir_name_string> -> doesn't contain regexp (regular expressions), wildcards or full path
        root_directory          ./resources/cgi;
        # interpreter_path = location of the cgi interpreter installed on the current system (full path)
        # Obs.: Pay attention to input the correct full path otherwise the server won't be able to run the interpreter
        ### mandatory
        # syntax: interpreter_path <path_string> -> doesn't contain regexp (regular expressions) or wildcards
        interpreter_path        /usr/local/bin/python3;
        allow_methods           POST GET DELETE;
    }

    location .php {
        root_directory          resources/cgi;
        interpreter_path        /usr/bin/php;
        allow_methods           POST GET DELETE;

    }

    location /cgi {
        root_directory          ./resources;
        allow_methods           ;
    }

    location /texts/ {
        index_file              index_texts.html;
        allow_methods            GET      POST;
    }

    location / {
        root_directory          ./resources;
        auto_index              off;
        allow_methods           GET;
    }

    location /images {
        root_directory          ;
        index_file              index_images.html;
        auto_index              on;
        allow_methods           GET;
    }

    location /folderA {
        root_directory
        index_file              index.html;
        auto_index              off;
        allow_methods           POST;
    }

    location /nonExistent {
        auto_index              on;
        redirection             http://localhost:8080/texts/one_page.html;
    }

    location /icons {
        allow_methods           GET;
        auto_index              on;
    }

    location /cookiesSet {
        root_directory          ;
		allow_methods           GET;
		set_cookies				cookie=true;max-age=30;path=/;
        auto_index              on;
    }

    location /UPLOADS {
		allow_methods           POST GET;
    }

    location /folder_noPerm {
        allow_methods           GET;
    }
}

# ----------------------------------------------------------------------------------------------------------------------
# ==================================================  second server  ===================================================
server {
    server_name                 test;
    host                        127.0.0.1;
    listens_to                  4243;
    root_directory              resources4243;
    index_file                  ;
	client_max_body_size        204800;
	error_page                  404.html 405.html 500.html 504.html;

    location /icons {
        allow_methods           GET;
        auto_index              off;
    }

    location /texts/ {
        root_directory          ;
        index_file              index_texts.html;
    }

    location / {
        index_file              index42.html;
        root_directory          ./resources4243;
        allow_methods           GET;
    }

    location /images {
        root_directory          ;
        index_file              index_images.html;
        auto_index              on;
        allow_methods           GET;
    }

    location /uploads {
        root_directory          ;
        allow_methods           GET;
    }
}

# ----------------------------------------------------------------------------------------------------------------------
# ===============================================  other website server  ===============================================
server {
    server_name                 f0r3s2.codam.nl;
    host                        10.11.1.6;
    listens_to                  4141;
    root_directory              resources4243;
    index_file                  index42.html;
	client_max_body_size        2048;
	error_page

    location /subfolder {
        root_directory          ./resources4243/location_random_dir/;
        allow_methods           POST DELETE;
        index_file              index42.html;
        auto_index              on;
    }

    location .py {
        root_directory          ./resources/cgi;
        interpreter_path        /usr/local/bin/python3;
    }

    location / {
        root_directory          ./resources4243/;
        allow_methods           GET;
    }

    location /images {
        root_directory          ;
        index_file              index_images.html;
        auto_index              on;
        allow_methods           GET;
    }

    location /nonExistent/ {
        root_directory          ;
        auto_index              on;
        allow_methods           POST GET DELETE;
    }
}

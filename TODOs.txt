Take a look:
    - if uploaded file is larger than 500kb, and if the maxbodysize is too small......
    - add interpreter path + upload directory + chdir with config file
    - WHAT ABOUT listensToPort == 8008 ?

Research:
    - The first server for a host:port will be the default for this host:port (that means
      it will answer to all the requests that don’t belong to an other server). -> [DONE]
    - Setup default error page (try to change the error 404). ?????????????????????????
    - In the browser we CAN'T type anything else than localhost or ip, but on curl we CAN (curl always has port)?????? -> [DONE] 
           (YES curl always has port and use only curl --resolve to test different server names/domains)
------------------------------------------------------------------------------------------------------------------------
More important:
    CORINA:
        - Timer leak (check log file ./TimerLeak.txt)
        - manual shut down leak (check log file ./manualShutDownLeak.txt)
        - Set 405 Method Not Allowed in the request parser
        - You need to test with files containing errors to see if the error handling works properly. 
            You can use a script containing an infinite loop or an error; you are free to do whatever tests you want 
            within the limits of acceptability that remain at your discretion.
    JAKA:
        - Setup multiple servers with different hostnames (use something like: curl --resolve example.com:80:127.0.0.1 http://example.com/) BASH TEST?? (Because it is done)
        - DONE (Corina+Joyce) - match server_name from config file with Host from request form [DONE RIGHT?]
        - Upload some file to the server and get it back (check if just clickin gon the file/image is enough)
        - DONE (joyce) - Index file has to be served if it exists (even if autoindex is on)
        - Bonus cgi .php --> If I add a new location block called .php, the parsing of the config file stops at that location
        - DONE - Use max_body_size from the config file on the server (on the request parser)
                 Limit the client body (use: curl -X POST -H "Content-Type: plain/text" --data "BODY IS HERE write something shorter or longer than body limit").
        - DONE (joyce) - The slash at the end of url should be always a folder, without a slash should be a file
    JOYCE:
        - DONE - http://localhost:8080/_folderA is not working check that
        - DONE - Add an upload_directory key to the config file
        - Make a location able to accept uploaded files (it’s on the pdf). Is it saved on the root directory of the
          location? Or there is another key that we are not aware of? ADD ANOTHER KEY
		- DONE - Our error pages have to be in the root of our directory!
        - DONE - Delete ip_address and add the option of server_name contain an ip address number or a string (domain)
        - Make the server_name accept only domain names and not ip_addresses????? since we now set 0.0.0.0??
        - DONE - Add a redirection location to the config file
        - DONE - if uri has a / at the end, then it's a directory, otherwise itd a file
        - Accepted HTTP methods from config file are not being used, but it’s mandatory to use
          - Set 405 Method Not Allowed IF specific location allowed methods does not match with the method received
        - DONE - If the server cannot server anything from an existing location (on the config file), it serves a FORBIDDEN (we tested with nginx)
------------------------------------------------------------------------------------------------------------------------
Less important:
    CORINA:
    JAKA:
        - Standardising htmls and .py/.php?
    JOYCE:
        - Clean up config file (delete some keys)
------------------------------------------------------------------------------------------------------------------------
Tests:
    Try a wrong URL on the server.
    Try to list a directory.
    Try a redirected URL.
    CORINA:
        - test more with curl? (maybe already included on Jaka's tester)
        - run test script from codam - this tests for some stuff we don't need to implement!
    JAKA:
        - Maybe another stress test from somewhere else (siege)? (I think codam one is fine but if we find another one
          it would not hurt to test).
        - Finish tester
    JOYCE:
        - Add more config files examples (mandatory by the pdf)
------------------------------------------------------------------------------------------------------------------------
Extras:
    CORINA:
        - Cookies as extra
    JAKA:
        - possibly adding a second cgi (php)
        - cgi - correct folder
    JOYCE:
        - Add the set_cookies key to the location on the config file
        - Another .php location is not working for the config file (no error too)
